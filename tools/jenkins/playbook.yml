---
- name: Install Jenkins master agent tools
  tags: all-tools
  hosts: all
  become: true
  vars:
  tasks:    
    - name: Install required packages
      ansible.builtin.apt:
        name:
          - software-properties-common
          - curl
          - openjdk-17-jdk
          - apt-transport-https
          - ca-certificates
          - gnupg
          - lsb-release
        state: present
        update_cache: yes
    
    # - name: Creta Jenkins User
    #   ansible.builtin.user:
    #     name: "jenkins"
    #     state: present
    #     shell: /bin/bash
    #     createhome: yes
    # - name: Add Jenkins User to sudoers
    #   ansible.builtin.copy:
    #     content: "jenkins ALL
    #     (ALL) NOPASSWD: ALL"
    #     dest: /etc/sudoers.d/jenkins
    #     mode: 0440

- name: Install Jenkins agent tools
  tags: docker
  hosts: 
    - master
    - docker
  become: true
  vars:
  tasks:    
    - name: Add an apt signing key for docker
      ansible.builtin.apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present
    
    - name: Add docker repository into sources list
      ansible.builtin.apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable
        state: present
    
    - name: Update cache & Install docker
      ansible.builtin.apt:
        update_cache: yes
        state: present
        pkg:
        - docker-ce
    
    - name: Ensure Docker service is enabled and started
      ansible.builtin.systemd_service:
        state: started
        name: docker    
        enabled: yes

    - name: Add user to the docker group
      ansible.builtin.user:
        name: "{{ ansible_user }}"
        groups: docker
        append: yes
    
- name: Install Jenkins
  tags: jenkins
  hosts: 
    - master
  become: true
  vars:
  tasks:
    - name: docker pull jenkins/jenkins:lts
      community.docker.docker_image:
        name: jenkins/jenkins
        source: pull
        state: present
        tag: lts
        
    - name: Create a volume
      community.docker.docker_volume:
        name: jenkins_home
    
    - name: start jenkins container
      community.docker.docker_container:
        name: jenkins
        image: jenkins/jenkins:lts
        state: started
        restart_policy: always
        ports:
          - "8080:8080"
          - "50000:50000"
        volumes:
          - "/var/run/docker.sock:/var/run/docker.sock"
          - "jenkins_home:/var/jenkins_home"
        env:
          # JAVA_OPTS: "-Djenkins.install.runSetupWizard=false"
          # JENKINS_OPTS: "--prefix=/jenkins"
          JENKINS_USER: "{{ ansible_user }}"
          JENKINS_PASS: "admin123"
          JENKINS_EMAIL: "{{ ansible_user }}@example.com"
          JENKINS_URL: "http://{{ ansible_ssh_host }}:8080"
          JENKINS_SLAVE_AGENT_PORT: "50000"
          JENKINS_HOME: "/var/jenkins_home"
          JENKINS_UC: "https://updates.jenkins.io"
          JENKINS_UC_EXPERIMENTAL: "https://updates.jenkins.io/experimental"
          JENKINS_OPTS: "--httpPort=8080"
          #JENKINS_JAVA_OPTIONS: "-Djenkins.install.runSetupWizard=false
    - name: read initial secrets
      community.docker.docker_container_exec:
        container: jenkins
        command: "cat /var/jenkins_home/secrets/initialAdminPassword"
      register: result

    - name: Print debug
      ansible.builtin.debug:
        msg: "Jenkins Initial Admin Password : {{ result.stdout }}"
        #var: result.stdout